export const COUNTER_CODE = `
  pragma solidity ^0.5.0;

  contract Counter {
    event Increment (uint256 by);

    uint256 public value;

    constructor (uint256 initialValue) public {
      value = initialValue;
    }

    function increment (uint256 by) public {
      value += by;
      emit Increment(by);
    }
  }
`

export const COUNTER_ABI = [
  'event Increment (uint256 by)',
  'constructor (uint256 initialValue)',
  'function increment (uint256 by)',
  'function value () view returns (uint256)',
]

// eslint-disable-next-line max-len
export const COUNTER_BYTECODE = '0x608060405234801561001057600080fd5b5060405161012a38038061012a8339818101604052602081101561003357600080fd5b505160005560e4806100466000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80633fa4f2451460375780637cf5dab014604f575b600080fd5b603d606b565b60408051918252519081900360200190f35b606960048036036020811015606357600080fd5b50356071565b005b60005481565b60008054820190556040805182815290517f51af157c2eee40f68107a47a49c32fbbeb0a3c9e5cd37aa56e88e6be92368a819181900360200190a15056fea265627a7a7231582077452357d335a24a81d0713049fb6b48aa28f956cc2cc4ffa8871c86e2da259a64736f6c634300050d0032'

// eslint-disable-next-line max-len
export const COUNTER_RUNTIME = '0x6080604052348015600f57600080fd5b506004361060325760003560e01c80633fa4f2451460375780637cf5dab014604f575b600080fd5b603d606b565b60408051918252519081900360200190f35b606960048036036020811015606357600080fd5b50356071565b005b60005481565b60008054820190556040805182815290517f51af157c2eee40f68107a47a49c32fbbeb0a3c9e5cd37aa56e88e6be92368a819181900360200190a15056fea265627a7a7231582077452357d335a24a81d0713049fb6b48aa28f956cc2cc4ffa8871c86e2da259a64736f6c634300050d0032'
